version: '3'
networks:
  drones-net:
services:
#  drones-app:
#    image: drones-app
#    build:
#      context: .
#    container_name: drones-app
#    depends_on:
##      - kafka
#      - mysql
#    ports:
#      - "18080:8080"
#    networks:
#      - drones-net

  mysql:
    image: mysql:8.0.16
    command: --default-authentication-plugin=mysql_native_password
    container_name: drones-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_DATABASE: 'drones'
      MYSQL_USER: 'dispatcher'
      MYSQL_PASSWORD: 'changeme'
    ports:
      - "3306:3306"
    networks:
      - drones-net
    volumes:
      - ./data/mysql:/var/lib/mysql

#  zookeeper:
#    image: confluentinc/cp-zookeeper:5.2.2
#    hostname: zookeeper
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#
#  kafka:
#    image: confluentinc/cp-enterprise-kafka:5.2.2
#    hostname: kafka
#    container_name: kafka
#    depends_on:
#      - cloudera
#    ports:
#    - "9092:9092"
#    - "29092:29092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:9092
#      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
#      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
#      CONFLUENT_METRICS_ENABLE: 'false'
#      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
